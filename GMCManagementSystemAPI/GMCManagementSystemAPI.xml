<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GMCManagementSystemAPI</name>
    </assembly>
    <members>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.SaveChanges">
            <summary>
                Saves all changes made in this context to the database.
            </summary>
            <remarks>
                This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                changes to entity instances before saving to the underlying database. This can be disabled via
                <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </remarks>
            <returns>
                The number of state entries written to the database.
            </returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.SaveChanges(System.Boolean)">
            <summary>
                Saves all changes made in this context to the database.
            </summary>
            <param name="acceptAllChangesOnSuccess">
                Indicates whether <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges" /> is called after the changes have
                been sent successfully to the database.
            </param>
            <remarks>
                This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                changes to entity instances before saving to the underlying database. This can be disabled via
                <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </remarks>
            <returns>
                The number of state entries written to the database.
            </returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously saves all changes made in this context to the database.
            </summary>
            <remarks>
                <para>
                    This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                    changes to entity instances before saving to the underlying database. This can be disabled via
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </remarks>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of state entries written to the database.
            </returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously saves all changes made in this context to the database.
            </summary>
            <param name="acceptAllChangesOnSuccess">
                Indicates whether <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges" /> is called after the changes have
                been sent successfully to the database.
            </param>
            <remarks>
                <para>
                    This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                    changes to entity instances before saving to the underlying database. This can be disabled via
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </remarks>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of state entries written to the database.
            </returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.Dispose">
            <summary>
                Releases the allocated resources for this context.
            </summary>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IDbContext.Set``1">
            <summary>
                Creates a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> that can be used to query and save instances of <typeparamref name="TEntity" />.
            </summary>
            <typeparam name="TEntity"> The type of entity for which a set should be returned. </typeparam>
            <returns> A set for the given entity type. </returns>
        </member>
        <member name="T:GMCManagementSystemAPI.Configuration.IocContainerConfiguration">
            <summary>
            IOC contaner start-up configuration
            </summary>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IocContainerConfiguration.ConfigureService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            Configures the service.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:GMCManagementSystemAPI.Configuration.IRepository`1">
            <summary>
            Interface for generic repository, contains CRUD operation of EF entity
            </summary>
            <typeparam name="T">EF entity</typeparam>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Get``1(``0)">
            <summary>
            Gets the specified identifier.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="id">The identifier.</param>
            <returns>Entity</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.GetAsync``1(``0)">
            <summary>
            Gets the specified identifier. Asynchronous version.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="id">The identifier.</param>
            <returns>Task Entity</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Get(System.Object[])">
            <summary>
            Gets an entity by the keys specified in <paramref name="keyValues"/>
            </summary>
            <param name="keyValues">Composite Primary Key Identifiers</param>
            <returns>The requested Entity</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Generic find by predicate
            </summary>
            <param name="predicate">Query predicate</param>
            <returns>Entity</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String)">
            <summary>
            Generic find by predicate and option to include child entity
            </summary>
            <param name="predicate">The predicate.</param>
            <param name="include">The include sub-entity.</param>
            <returns>Queryable</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns>List of entities</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all. With data pagination.
            </summary>
            <param name="page">The page.</param>
            <param name="pageCount">The page count.</param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.GetAll(System.String)">
            <summary>
            Gets all and offers to include a related table
            </summary>
            <param name="include">Te sub.entity to include</param>
            <returns>List of entities</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.GetAll(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets all and offers to include 2 related tables
            </summary>
            <param name="include">The sub.entity to include</param>
            <param name="include2">The second sub.entity to include</param>
            <returns>List of entities</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The Entity's state</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Delete(`0)">
            <summary>
            Deletes the specified <paramref name="entity"/>
            </summary>
            <param name="entity">The entity to delete</param>
            <returns>The Entity's state</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Exists(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Checks whether a entity matching the <paramref name="predicate"/> exists
            </summary>
            <param name="predicate">The predicate to filter on</param>
            <returns>Whether an entity matching the <paramref name="predicate"/> exists</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IRepository`1.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The Entity's state</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IUnitOfWork.GetRepository``1">
            <summary>
            Gets the repository.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <returns>Repository</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.IUnitOfWork.Commit">
            <summary>
            Saves all pending changes
            </summary>
            <returns>The number of objects in an Added, Modified, or Deleted state</returns>
        </member>
        <member name="T:GMCManagementSystemAPI.Configuration.Repository`1">
            <summary>
            Generic repository, contains CRUD operation of EF entity
            </summary>
            <typeparam name="T">Entity type</typeparam>
        </member>
        <member name="F:GMCManagementSystemAPI.Configuration.Repository`1.context">
            <summary>
            EF data base context
            </summary>
        </member>
        <member name="F:GMCManagementSystemAPI.Configuration.Repository`1.dbSet">
            <summary>
            Used to query and save instances of
            </summary>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.#ctor(GMCManagementSystemAPI.Configuration.IDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GMCManagementSystemAPI.Configuration.Repository`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Get``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.GetAsync``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Get(System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.GetAll">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.GetAll(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.GetAll(System.String)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.GetAll(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Exists(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Delete(`0)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.Repository`1.Update(`0)">
            <inheritdoc />
        </member>
        <member name="M:GMCManagementSystemAPI.Configuration.UnitOfWork.Commit">
            <summary>
            Saves all pending changes
            </summary>
            <returns>The number of objects in an Added, Modified, or Deleted state</returns>
        </member>
        <member name="T:GMCManagementSystemAPI.Controllers.BaseController`1">
            <summary>
            Base api controller all api controllers should inherit from this controller
            </summary>
            <typeparam name="TViewModel">Type of the view model</typeparam>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.#ctor(GMCManagementSystemAPI.Services.Generic.IGenericService{`0})">
            <summary>
            TODO: Pass base validation service and common CRUD operation in the base controller
            </summary>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.GetAll">
            <summary>
            Gets all the entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.GetByAny(System.Int32)">
            <summary>
            Gets all the entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.GetAllWithData">
            <summary>
            Gets all the entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.Get(System.Int32,System.Int32)">
            <summary>
            Gets teh paged result for the entity requested
            </summary>
            <param name="page"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.GetById(System.Int32)">
            <summary>
            Gets the entity by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.Post(`0)">
            <summary>
            Inserts the entity
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.Put(System.Int32,`0)">
            <summary>
            Updates the entity
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Controllers.BaseController`1.Delete(System.Int32)">
            <summary>
            Deletes the entity
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GMCManagementSystemAPI.Mappings.MapsProfile">
            <summary>
            Contains objects mapping
            </summary>
            <seealso cref="T:AutoMapper.Configuration.MapperConfigurationExpression" />
        </member>
        <member name="M:GMCManagementSystemAPI.Mappings.MapsProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GMCManagementSystemAPI.Mappings.MapsProfile"/> class
            </summary>
        </member>
        <member name="T:GMCManagementSystemAPI.Repository.IGenericRepository`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.GetAll(System.String)">
            <summary>
            Gets all and offers to include a related table
            </summary>
            <param name="include">Te sub.entity to include</param>
            <returns>List of entities</returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets the list of devices.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns></returns>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.GetById(System.Int32)">
            <summary>
            Gets the device by identifier.
            </summary>
            <param name="id">The device identifier.</param>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.Create(`0)">
            <summary>
            Creates the device.
            </summary>
            <param name="entity">The device view model.</param>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.Update(System.Int32,`0)">
            <summary>
            Updates the device.
            </summary>
            <param name="id">The device identifier.</param>
            <param name="entity">The device view model.</param>
        </member>
        <member name="M:GMCManagementSystemAPI.Repository.IGenericRepository`1.Delete(`0)">
            <summary>
            Updates the device.
            </summary>
            <param name="entity">The device view model.</param>
        </member>
    </members>
</doc>
